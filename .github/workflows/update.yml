name: Update Charts

on:
  schedule:
    # Runs daily at 6:15 p.m. PDT → 01:15 UTC
    - cron: "15 1 * * *"
  workflow_dispatch:  # allows manual trigger

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout repo
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2️⃣ Set up Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      # 3️⃣ Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install notebook nbconvert pandas numpy geopandas xlrd requests matplotlib openpyxl seaborn

      # 4️⃣ Ensure folders exist
      - name: Create folders
        run: |
          mkdir -p data
          mkdir -p docs/charts

      # 5️⃣ Run notebook safely
      - name: Run notebook
        run: |
          python -m nbconvert \
            --to notebook \
            --execute read_results.ipynb \
            --output read_results.ipynb \
            --ExecutePreprocessor.allow_errors=True

      # 6️⃣ Insert last updated date (only if this is "Update Charts")
# 6️⃣ Insert/Update "last updated" date (idempotent)
      - name: Insert/Update last updated date
        shell: bash
        env:
          TZ: America/Los_Angeles
        run: |
          set -euo pipefail
          DATE="$(date +"%B %d, %Y %I:%M %p %Z")"
          echo "Using DATE='$DATE'"

          shopt -s nullglob
          files=(docs/index.html docs/*/index.html)

          any=0
          for file in "${files[@]}"; do
            [ -f "$file" ] || continue

            if grep -q 'id="update-date"' "$file"; then
              # Update inner text of the existing span
              sed -i -E 's|(id="update-date"[^>]*>)[^<]*(</span>)|\1'"$DATE"'\2|g' "$file"
              echo "✅ Updated <span id=\"update-date\"> in: $file"
              any=1
            elif grep -q 'DATE_PLACEHOLDER' "$file"; then
              # One-time bootstrap: replace the placeholder text
              sed -i "s|DATE_PLACEHOLDER|$DATE|g" "$file"
              echo "✅ Replaced DATE_PLACEHOLDER in: $file"
              any=1
            else
              echo "↷ Skipped (no update-date span or placeholder): $file"
            fi
          done

          if [ "$any" -eq 0 ]; then
            echo "⚠️ No files updated. Ensure your HTML has either <span id=\"update-date\">…</span> or DATE_PLACEHOLDER."
          fi


      # 7️⃣ Commit updated files
      - name: Commit changes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add docs/ read_results.ipynb
          git commit -m "Auto-update charts [skip ci]" || echo "No changes to commit"
          git push
